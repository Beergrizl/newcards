{"version":3,"sources":["components/page404/Page404.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/superComponents/superButton/SuperButton.module.css","components/superComponents/superCheckbox/SuperCheckbox.module.css","features/main/Main.module.css","components/passwordNew/PasswordNew.tsx","components/login/loginApi.tsx","components/login/loginReducer.ts","components/profile/Profile.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/login/Login.tsx","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","features/main/Main.tsx","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/profile/profileReducer.ts","components/page404/page404Reducer.ts","components/passwordNew/passwordNewReducer.ts","components/passwordRecovery/passwordRecoveryReducer.ts","app/store.ts","index.tsx","features/navbar/Navbar.module.css"],"names":["module","exports","PasswordNew","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","isLoggedIn","loginError","isInitialised","initError","setLoginErrorAC","type","setIsLoggedInAC","value","Profile","dispatch","useDispatch","useSelector","state","login","isInitialized","to","alt","src","avatar","email","name","onClick","then","res","catch","e","error","response","message","PasswordRecovery","useState","setData","onChange","currentTarget","isRegistered","registrationError","setRegistrationErrorAC","Registration","registration","useEffect","setTimeout","formik","useFormik","initialValues","password","passwordConfirm","validate","values","errors","test","length","onSubmit","handleSubmit","getFieldProps","touched","style","color","id","Login","rememberMe","setDataAC","SuperInputText","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","htmlFor","SuperComponents","Page404","styles","body404","container","h2404","h3404","p404","Main","path","element","Navbar","nav","isActive","activeStyle","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","profile","page404","passwordRecovery","passwordNew","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.969d5deb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__3BfIS\",\"container\":\"Page404_container__2smht\",\"h2404\":\"Page404_h2404__2GIi3\",\"h3404\":\"Page404_h3404__3Y1SB\",\"p404\":\"Page404_p404__3xgQD\",\"a404\":\"Page404_a404__3rgJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3p-l3\",\"errorInput\":\"SuperInputText_errorInput__RaxO8\",\"error\":\"SuperInputText_error__3OLa8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1nfHx\",\"red\":\"SuperButton_red__38BAv\",\"button\":\"SuperButton_button__2EN90\",\"blink\":\"SuperButton_blink__21tU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1ifXx\",\"spanClassName\":\"SuperCheckbox_spanClassName__wZnJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__3QCEx\"};","import React from \"react\";\n\nexport const PasswordNew: React.FC = () => {\n    return (\n        <div>\n            PasswordNew\n        </div>\n    )\n}","import axios, {AxiosResponse} from 'axios'\r\nimport {FormikErrorType} from \"./Login\";\r\nimport {FormikRegisterErrorType} from \"../registration/Registration\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    login(data: FormikErrorType) {\r\n        return instance.post<FormikErrorType, AxiosResponse<ResponseDataType>>('/auth/login', data)\r\n    },\r\n    register(data: FormikRegisterErrorType) {\r\n        return instance.post<FormikRegisterErrorType, AxiosResponse<RegisterDataType>>('/auth/register', data)\r\n    },\r\n    me() {\r\n        return instance.post< AxiosResponse<ResponseDataType>>('/auth/me')\r\n    },\r\n    logOut() {\r\n        return instance.delete< AxiosResponse<LogOutDataType>>('/auth/me')\r\n    },\r\n}\r\nexport type RegisterDataType = {\r\n    addedUser: {},\r\n    error?: string;\r\n}\r\nexport type LogOutDataType = {\r\n    info: string,\r\n    error?: string;\r\n}\r\nexport type ResponseDataType = {\r\n\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {authAPI, ResponseDataType} from \"./loginApi\";\nimport {FormikErrorType} from \"./Login\";\nimport {Dispatch} from \"redux\";\n\nconst initialState = {\n    isLoggedIn: false,\n    data: {} as ResponseDataType,\n    loginError: '',\n    isInitialised: false,\n    initError: '',\n};\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n\n        case \"Login/SET-IS-LOGGED-IN\":\n            return {...state, isLoggedIn: action.value};\n        case \"Login/SET-DATA\":\n            return {...state, data: action.data}\n        case \"Login/SET-LOGIN-ERROR\":\n            return {...state, loginError: action.loginError}\n        case \"Login/SET-INIT-ERROR\":\n            return {...state, initError: action.initError}\n        case \"Login/SET-IS-INITIALIZED\":\n            return {...state, isInitialised: action.value}\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setLoginErrorAC = (loginError: string) =>\n    ({type: \"Login/SET-LOGIN-ERROR\", loginError} as const)\nexport const setIsLoggedInAC = (value: boolean) =>\n    ({type: 'Login/SET-IS-LOGGED-IN', value} as const)\nexport const setDataAC = (data: ResponseDataType) =>\n    ({type: 'Login/SET-DATA', data} as const)\nexport const setIsInitializedAC = (value: boolean) =>\n    ({type: 'Login/SET-IS-INITIALIZED', value} as const)\nexport const setInitErrorAC = (initError: string) =>\n    ({type: \"Login/SET-INIT-ERROR\", initError} as const)\n\n// types\ntype InitialStateType = typeof initialState;\nexport type ActionType = ReturnType<typeof setLoginErrorAC>\n    | ReturnType<typeof setIsLoggedInAC>\n    | ReturnType<typeof setDataAC>\n    | ReturnType<typeof setIsInitializedAC>\n    | ReturnType<typeof setInitErrorAC>\n\n// thunks\nexport const loginTC = (data: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\n\n    authAPI.login(data)\n        .then(res => {\n            dispatch(setIsLoggedInAC(true))\n            dispatch(setDataAC(res.data))\n        })\n        .catch(e => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(setLoginErrorAC(error))\n        })\n}\nexport const isInitialisedTC = () => (dispatch: Dispatch<ActionType>) => {\n\n    authAPI.me()\n        .then(res => {\n            dispatch(setIsInitializedAC(true))\n        })\n        .catch(e => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(setInitErrorAC(error))\n        })\n}\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\n\n    authAPI.logOut()\n        .then(res => {\n            dispatch(setIsLoggedInAC(false))\n\n        })\n        .catch(e => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(setLoginErrorAC(error))\n        })\n}","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {ResponseDataType} from \"../login/loginApi\";\nimport {logOutTC} from \"../login/loginReducer\";\nimport {Navigate} from \"react-router-dom\";\n\nexport const Profile: React.FC = () => {\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.login.isInitialised)\n\n    const data = useSelector<AppRootStateType, ResponseDataType>(state => state.login.data)\n    const logOutHandler = () => {\n        dispatch(logOutTC())\n    }\n    if (isInitialized && !isLoggedIn) {\n        return <Navigate to={'/login'}/>\n    }\n    return (\n        <div>\n            <h1> Profile</h1>\n            <div>{<img alt={''} src={data.avatar}/>}</div>\n            <div> email: {data.email}</div>\n            <div> name: {data.name}</div>\n            <button onClick={logOutHandler}>LogOut</button>\n        </div>\n    )\n}","import React, {ChangeEvent, useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const PasswordRecovery: React.FC = () => {\n    const [data, setData] = useState(\n        {\n            email: '',\n            message: `<div style=\"background-color: lime; padding: 15px\">\n            password recovery link: \n            <a href='http://localhost:3000/#/set-new-password/$token$'>\nlink</a></div>` // хтмп-письмо, вместо $token$ бэк вставит токен,\n        }\n    )\n    const onClickHandler = () => {\n    }\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setData({ ...data, email: e.currentTarget.value})\n    }\n\n    return (\n        <div>\n            <h1> PasswordRecovery</h1>\n            email <input type={'email'} onChange={onChangeHandler}/>\n            <button onClick={onClickHandler}>Send</button>\n            <p>Enter your email address and we will send you further instructions</p>\n            <NavLink to={'/login'}>Login</NavLink>\n        </div>\n    )\n}","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../login/loginApi\";\nimport {FormikRegisterErrorType} from \"./Registration\";\n\nconst initialState = {\n    isRegistered: false,\n    registrationError: '',\n};\n\nexport const registrationReducer = (state: InitialStateType = initialState, action: RegActionType): InitialStateType => {\n    switch (action.type) {\n        case \"REGISTRATION/SET-REGISTRATION\":\n            return {...state, isRegistered: action.value};\n        case \"REGISTRATION/SET-REGISTRATION-ERROR\":\n            return {...state, registrationError: action.registrationError}\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setRegistrationAC = (value: boolean) => ({type: \"REGISTRATION/SET-REGISTRATION\", value} as const)\nexport const setRegistrationErrorAC = (registrationError: string) => ({type: \"REGISTRATION/SET-REGISTRATION-ERROR\", registrationError} as const)\n\n// types\ntype InitialStateType = typeof initialState;\nexport type RegActionType = ReturnType<typeof setRegistrationAC>|\n    ReturnType<typeof setRegistrationErrorAC>\n\nexport const registerTC = (data: FormikRegisterErrorType) => (dispatch: Dispatch<RegActionType>) => {\n\n    authAPI.register(data)\n        .then(res => {\n            dispatch(setRegistrationAC(true))\n        })\n     .catch(e => {\n         const error = e.response\n             ? e.response.data.error\n             : (e.message + ', more details in the console');\n         dispatch(setRegistrationErrorAC(error))\n })\n}","import React, {useEffect} from \"react\";\nimport {useFormik} from \"formik\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {registerTC, setRegistrationErrorAC} from \"./registrationReducer\";\n\nexport type FormikRegisterErrorType = {\n    email?: string,\n    password?: string,\n    passwordConfirm?: string\n}\n\nexport const Registration: React.FC = () => {\n\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistered)\n    const registrationError = useSelector<AppRootStateType, string>(state => state.registration.registrationError)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (registrationError) {\n            setTimeout(() => {\n                setRegistrationErrorAC('')\n            }, 4000)\n        }\n    }, [registrationError,dispatch])\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            passwordConfirm: ''\n        },\n        validate: (values) => {\n            const errors: FormikRegisterErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 3) {\n                errors.password = 'Must be 3 characters or more';\n            }\n            if (!values.passwordConfirm) {\n                errors.passwordConfirm = 'Required';\n            } else if (values.passwordConfirm !== values.password) {\n                errors.passwordConfirm = 'passwords must be same';\n            }\n            return errors;\n        },\n\n        onSubmit: values => {\n            dispatch(registerTC(values))\n            //formik.resetForm();\n        },\n    })\n\n    if (isRegistered) {\n        return <Navigate to='/login'/>\n    }\n    return (\n        <div>\n            <div> Registration</div>\n            <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <input type=\"email\"\n                        // name=\"email\"\n                        // onBlur={formik.handleBlur}\n                        // onChange={formik.handleChange}\n                        // value={formik.values.email}\n                           {...formik.getFieldProps('email')}\n                    />\n                    {formik.touched.email && formik.errors.email &&\n                        <div style={{color: 'red'}}>{formik.errors.email} </div>}\n\n                </div>\n                <div>\n                    <input type=\"password\" id='password'\n                           {...formik.getFieldProps('password')}/>\n                    {formik.touched.password && formik.errors.password &&\n                        <div style={{color: 'red'}}>{formik.errors.password}</div>}\n                </div>\n                <div>\n                    <input type=\"password\" id='passwordConfirm'\n                           {...formik.getFieldProps('passwordConfirm')}/>\n                    {formik.touched.passwordConfirm && formik.errors.passwordConfirm &&\n                        <div style={{color: 'red'}}>{formik.errors.passwordConfirm}</div>}\n                </div>\n                <div style={{color: 'red'}}>{registrationError ? registrationError : ''}</div>\n                <button type={'submit'} color={'primary'}> Sign Up</button>\n                <div>\n                    <NavLink to='/login'>Login</NavLink>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from \"react\";\nimport {useFormik} from \"formik\";\nimport {NavLink} from \"react-router-dom\";\nimport {loginTC} from \"./loginReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {Navigate} from \"react-router-dom\";\n\nexport type FormikErrorType = {\n    email?: string,\n    password?: string,\n    rememberMe?: boolean\n}\n\nexport const Login: React.FC = () => {\n\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const loginError = useSelector<AppRootStateType, string>(state => state.login.loginError)\n    const dispatch = useDispatch()\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 3) {\n                errors.password = 'Must be 3 characters or more';\n            }\n            return errors;\n        },\n\n        onSubmit: values => {\n            dispatch(loginTC(values))\n            //formik.resetForm();\n        },\n    })\n    if (isLoggedIn) {\n        return <Navigate to='/profile'/>\n    }\n    return (\n        <div>\n            <h1> Login</h1>\n            <form onSubmit={formik.handleSubmit}>\n                <div style={{color: 'red'}}>{loginError ? loginError : '  '}</div>\n                <div>\n                    <input type=\"email\"\n                        // name=\"email\"\n                        // onBlur={formik.handleBlur}\n                        // onChange={formik.handleChange}\n                        // value={formik.values.email}\n                           {...formik.getFieldProps('email')}\n                    />\n                    {formik.touched.email && formik.errors.email &&\n                        <div style={{color: 'red'}}>{formik.errors.email} </div>}\n\n                </div>\n                <div>\n                    <input type=\"password\"\n                           {...formik.getFieldProps('password')}/>\n                    {formik.touched.password && formik.errors.password &&\n                        <div style={{color: 'red'}}>{formik.errors.password}</div>}\n                </div>\n                <div>\n                    <input type=\"checkbox\"\n                           {...formik.getFieldProps('rememberMe')}\n                    />\n                </div>\n                <div>\n                    <NavLink to='/passwordRecovery'>PasswordRecovery</NavLink>\n                </div>\n                <button type={'submit'} color={'primary'}> Login</button>\n                <div>\n                    <NavLink to='/registration'>Registration</NavLink>\n                </div>\n            </form>\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <div>\n            <input\n                className={finalInputClassName}\n                type={'checkbox'}\n                id={'checkbox'}\n                name={'check'}\n                onChange={onChangeCallback}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            /> <label htmlFor={'checkbox'}/>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </div> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from \"react\";\nimport SuperInputText from \"./superInputText/SuperInputText\";\nimport SuperButton from \"./superButton/SuperButton\";\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\n\nexport const SuperComponents: React.FC = () => {\n    return (\n        <div>\n            <h2>SuperComponents</h2>\n            <SuperInputText/>\n            <SuperButton>\n                click\n            </SuperButton>\n            <div>\n                <SuperCheckbox/>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport styles from './Page404.module.css'\n\nexport const Page404: React.FC = () => {\n    return (\n        <div className={styles.body404}>\n            <div className={styles.container}>\n                <h2 className={styles.h2404}>404</h2>\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\n                <p className={styles.p404}>Please Check the URL</p>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {Navigate, Route, Routes } from 'react-router-dom';\nimport {PasswordNew} from \"../../components/passwordNew/PasswordNew\";\nimport {Profile} from \"../../components/profile/Profile\";\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\nimport {Registration} from \"../../components/registration/Registration\";\nimport {Login} from \"../../components/login/Login\";\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\nimport {Page404} from \"../../components/page404/Page404\";\nimport styles from './Main.module.css'\n\n\nexport const Main: React.FC = () => {\n    return (\n        <div className={styles.Main}>\n            <Routes>\n\n                <Route path='/login' element={<Login/>}/>\n\n                <Route path='/' element={<Navigate to='/profile'/>}/>\n                <Route path='/profile' element={<Profile/>}/>\n\n                <Route path='/registration' element={<Registration/>}/>\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\n                <Route path='/passwordNew' element={<PasswordNew/>}/>\n                <Route path='/superComponents' element={<SuperComponents/>}/>\n\n                <Route path='404' element={<Page404/>}/>\n                <Route path='*' element={<Navigate to='/404'/>}/>\n            </Routes>\n        </div>\n    )\n}","import React from \"react\";\nimport styles from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nexport const Navbar: React.FC = () => {\n\n    return <nav className={styles.nav}>\n        <div>\n            <NavLink to='/profile'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >Profile</NavLink>\n        </div>\n        <div>\n            <NavLink to='/login'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >Login</NavLink>\n        </div>\n        <div>\n            <NavLink to='/registration'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >Registration</NavLink>\n        </div>\n        <div>\n            <NavLink to='/passwordRecovery'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >PasswordRecovery</NavLink>\n        </div>\n        <div>\n            <NavLink to='/passwordNew'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >PasswordNew</NavLink>\n        </div>\n        <div>\n            <NavLink to='/superComponents'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >SuperComponents</NavLink>\n        </div>\n        <div>\n            <NavLink to='/404'\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\n            >Page404</NavLink>\n        </div>\n    </nav>\n\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Main} from \"../features/main/Main\";\nimport {Navbar} from \"../features/navbar/Navbar\";\nimport {useDispatch} from \"react-redux\";\nimport {isInitialisedTC} from \"../components/login/loginReducer\";\n\n\nconst App = () => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(isInitialisedTC())\n    }, [dispatch])\n\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Main/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {};\n\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\n    switch (action.type) {\n        case \"APP/SET-STATUS\":\n            return state;\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\n\n// thunks\n\n// types\ntype InitialStateType = typeof initialState;\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\n","const initialState = {};\n\nexport const profileReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\n    switch (action.type) {\n        case \"APP/SET-STATUS\":\n            return state;\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\n\n// thunks\n\n// types\ntype InitialStateType = typeof initialState;\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\n","const initialState = {};\n\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\n    switch (action.type) {\n        case \"APP/SET-STATUS\":\n            return state;\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\n\n// thunks\n\n// types\ntype InitialStateType = typeof initialState;\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\n","const initialState = {};\n\nexport const passwordNewReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\n    switch (action.type) {\n        case \"APP/SET-STATUS\":\n            return state;\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\n\n// thunks\n\n// types\ntype InitialStateType = typeof initialState;\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\n","const initialState = {};\n\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\n    switch (action.type) {\n        case \"APP/SET-STATUS\":\n            return state;\n        default:\n            return state;\n    }\n};\n\n// actions\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\n\n// thunks\n\n// types\ntype InitialStateType = typeof initialState;\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from \"./appReducer\";\nimport {loginReducer} from \"../components/login/loginReducer\";\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\nimport {profileReducer} from \"../components/profile/profileReducer\";\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\nimport {passwordNewReducer} from \"../components/passwordNew/passwordNewReducer\";\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    login: loginReducer,\n    registration: registrationReducer,\n    profile: profileReducer,\n    page404: page404Reducer,\n    passwordRecovery: passwordRecoveryReducer,\n    passwordNew: passwordNewReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./app/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n            <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__SXaJn\",\"item\":\"Navbar_item__5dQf_\",\"activeStyle\":\"Navbar_activeStyle__dRicr\"};"],"sourceRoot":""}